version: '2'

services:

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - portainer_data:/portainer_data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:

    # nginx values
      - VIRTUAL_HOST=langaracs.tech
      - VIRTUAL_PATH=/portainer
      - LETSENCRYPT_HOST=langaracs.tech
      - LETSENCRYPT_EMAIL=langaracompsciclub@gmail.com
    network_mode: bridge

  # watchtower - keeps other containers updated
  watchtower:
    ports:
      - '8080:8080'
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # set timezone
      - TZ=America/Vancouver 
      # delete old containers
      - WATCHTOWER_CLEANUP=true
      # revive containers with updates
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
      # post updates to logging channel
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_LOG_CHANNEL}
      
      # Use HTTP request to check for an image update
      # curl -H "Authorization: Bearer token" localhost:8080/v1/update
      - WATCHTOWER_HTTP_API_UPDATE=true
      # Set token for HTTP request from .env
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN}
      # Also continue checking for updates automatically (every hour)
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_HTTP_API_PERIODIC_POLLS=true

      # nginx values
      - VIRTUAL_HOST=langaracs.tech
      - VIRTUAL_PATH=/watchtower
      - LETSENCRYPT_HOST=langaracs.tech
      - LETSENCRYPT_EMAIL=langaracompsciclub@gmail.com
    network_mode: bridge


  # runs our discord bot peregrine
  peregrine:
    network_mode: host 
    image: "ghcr.io/langaracpsc/peregrine:latest"
    restart: unless-stopped
    environment:
      - DISCORD_BOT_TOKEN
      - WATCHTOWER_HTTP_API_TOKEN


  # an api for langara courses
  langara-api:
    ports:
      - '5000:5000'
    image: "ghcr.io/highfire1/langara-course-api:latest"
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=api.langaracs.tech
      - VIRTUAL_PATH=/
      - LETSENCRYPT_HOST=api.langaracs.tech
      - LETSENCRYPT_EMAIL=langaracompsciclub@gmail.com
    network_mode: bridge


  # our new website!
  langaracpsc-next:
    ports:
      - '3000:3000'
    image: "ghcr.io/langaracpsc/langaracpsc-next:latest"
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=langaracs.tech
      - VIRTUAL_PATH=/
      - LETSENCRYPT_HOST=langaracs.tech
      - LETSENCRYPT_EMAIL=langaracompsciclub@gmail.com
    network_mode: bridge



  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    network_mode: bridge

  docker-gen:
    image: nginxproxy/docker-gen
    container_name: docker-gen
    command: -notify-sighup nginx-proxy -watch /etc/docker-proxy-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx-proxy
    volumes:
      - ./nginx/nginx.tmpl:/etc/docker-proxy-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen
    network_mode: bridge

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=langaracompsciclub@gmail.com
      - NGINX_DOCKER_GEN_CONTAINER=docker-gen
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge

volumes:
  portainer_data:
  conf:
  vhost:
  html:
  certs:
  acme: